START -> STATEMENTS

STATEMENTS -> STATEMENT STATEMENTS
STATEMENTS -> λ

STATEMENT -> if ( EXPRESSION @save ) BLOCK @if
STATEMENT -> if ( EXPRESSION @save ) BLOCK @if @save else BLOCK @else
STATEMENT -> while( @label EXPRESSION @save ) BLOCK @while
STATEMENT -> do BLOCK while ( EXPRESSION @do_while )
STATEMENT -> @variable variable := EXPRESSION delimiter @assign
STATEMENT -> VOID_FUNCTION_CALL delimiter

VOID_FUNCTION_CALL -> @function function ( FUNCTION_CALL_PARAMS ) @void_call
FUNCTION_CALL -> @function function ( FUNCTION_CALL_PARAMS ) @call
FUNCTION_CALL_PARAMS -> EXPRESSION params_delimiter FUNCTION_CALL_PARAMS
FUNCTION_CALL_PARAMS -> EXPRESSION
FUNCTION_CALL_PARAMS -> λ

BLOCK -> STATEMENT
BLOCK -> { STATEMENTS }

TERM -> @variable variable
TERM -> @number number
TERM -> FUNCTION_CALL

EXPRESSION -> A

A -> A || B @or
A -> B

B -> B && C @and
B -> C

C -> C != D @not_equal
C -> C == D @equal
C -> D

D -> D >= E @greater_than_and_equal
D -> D > E @greater_than
D -> D <= E @less_than_and_equal
D -> D < E @less_than
D -> E

E -> E - F @subtract
E -> E + F @add
E -> F

F -> F * G @multiply
F -> F / G @divide
F -> F % G @modulo
F -> G

G -> H ^ G @pow
G -> H

H -> - H @unary_minus
H -> + H @unary_plus
H -> ! H @not
H -> I

I -> TERM
I -> ( EXPRESSION )