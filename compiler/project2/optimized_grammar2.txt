[Variable('START'), Statement([STATEMENTS])],

[Variable('STATEMENTS'), Statement([STATEMENT STATEMENTS1])],
[Variable('STATEMENTS'), Statement([λ])],
[Variable('STATEMENTS1'), Statement([delimiter STATEMENTS])],
[Variable('STATEMENTS1'), Statement([λ])],

[Variable('STATEMENT'), Statement([if ( EXPRESSION @save ) BLOCK @if STATEMENT1])],
[Variable('STATEMENT1'), Statement([λ])],
[Variable('STATEMENT1'), Statement([@save else BLOCK @else])],

[Variable('STATEMENT'), Statement([while( EXPRESSION @save ) BLOCK @while])],
[Variable('STATEMENT'), Statement([do BLOCK while ( EXPRESSION @do_while )])],
[Variable('STATEMENT'), Statement([variable = MATH @assign])],
[Variable('STATEMENT'), Statement([FUNCTION_CALL])],

[Variable('FUNCTION_CALL_PARAMS'), Statement([TERM FUNCTION_CALL_PARAMS1])],
[Variable('FUNCTION_CALL_PARAMS'), Statement([λ])],
[Variable('FUNCTION_CALL_PARAMS1'), Statement([params_delimiter FUNCTION_CALL_PARAMS])],
[Variable('FUNCTION_CALL_PARAMS1'), Statement([λ])],

[Variable('BLOCK'), Statement([STATEMENT])],
[Variable('BLOCK'), Statement([{ STATEMENTS }])],

[Variable('TERM'), Statement([@variable variable])],
[Variable('TERM'), Statement([@number number])],

[Variable('EXPRESSION'), Statement([MATH])],

[Variable('MATH'), Statement([A])],

[Variable('A'), Statement([B A2])],
[Variable('A2'), Statement([A1 A2])],
[Variable('A2'), Statement([λ])],
[Variable('A1'), Statement([+ B @add])],
[Variable('A1'), Statement([- B @minus])],

[Variable('B'), Statement([C B2])],
[Variable('B2'), Statement([B1 B2])],
[Variable('B2'), Statement([λ])],
[Variable('B1'), Statement([* C @multiply])],
[Variable('B1'), Statement([/ C @divide])],

[Variable('C'), Statement([- C @invert])],
[Variable('C'), Statement([D])],

[Variable('D'), Statement([E D1])],
[Variable('D1'), Statement([^ D @pow])],
[Variable('D1'), Statement([λ])],

[Variable('E'), Statement([TERM])],
[Variable('E'), Statement([( MATH )])],
